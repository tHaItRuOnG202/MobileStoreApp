#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAO_MoblieStoreApp
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="IMPROOKV1")]
	public partial class IMPROOKSTOREDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietHoaDon(ChiTietHoaDon instance);
    partial void UpdateChiTietHoaDon(ChiTietHoaDon instance);
    partial void DeleteChiTietHoaDon(ChiTietHoaDon instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertGiamGia(GiamGia instance);
    partial void UpdateGiamGia(GiamGia instance);
    partial void DeleteGiamGia(GiamGia instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLoaiSanPham(LoaiSanPham instance);
    partial void UpdateLoaiSanPham(LoaiSanPham instance);
    partial void DeleteLoaiSanPham(LoaiSanPham instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    #endregion
		
		public IMPROOKSTOREDataContext() : 
				base(global::DAO_MoblieStoreApp.Properties.Settings.Default.IMPROOKV1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public IMPROOKSTOREDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IMPROOKSTOREDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IMPROOKSTOREDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public IMPROOKSTOREDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietHoaDon> ChiTietHoaDons
		{
			get
			{
				return this.GetTable<ChiTietHoaDon>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<GiamGia> GiamGias
		{
			get
			{
				return this.GetTable<GiamGia>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LoaiSanPham> LoaiSanPhams
		{
			get
			{
				return this.GetTable<LoaiSanPham>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHoaDon")]
	public partial class ChiTietHoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDHoaDon;
		
		private int _IDSanPham;
		
		private int _SoLuong;
		
		private string _DonGia;
		
		private EntityRef<SanPham> _SanPham;
		
		private EntityRef<HoaDon> _HoaDon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDHoaDonChanging(int value);
    partial void OnIDHoaDonChanged();
    partial void OnIDSanPhamChanging(int value);
    partial void OnIDSanPhamChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(string value);
    partial void OnDonGiaChanged();
    #endregion
		
		public ChiTietHoaDon()
		{
			this._SanPham = default(EntityRef<SanPham>);
			this._HoaDon = default(EntityRef<HoaDon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHoaDon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDHoaDon
		{
			get
			{
				return this._IDHoaDon;
			}
			set
			{
				if ((this._IDHoaDon != value))
				{
					if (this._HoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHoaDonChanging(value);
					this.SendPropertyChanging();
					this._IDHoaDon = value;
					this.SendPropertyChanged("IDHoaDon");
					this.OnIDHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSanPham", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDSanPham
		{
			get
			{
				return this._IDSanPham;
			}
			set
			{
				if ((this._IDSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IDSanPham = value;
					this.SendPropertyChanged("IDSanPham");
					this.OnIDSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietHoaDon", Storage="_SanPham", ThisKey="IDSanPham", OtherKey="IDSanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietHoaDons.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDons.Add(this);
						this._IDSanPham = value.IDSanPham;
					}
					else
					{
						this._IDSanPham = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChiTietHoaDon", Storage="_HoaDon", ThisKey="IDHoaDon", OtherKey="IDHoaDon", IsForeignKey=true)]
		public HoaDon HoaDon
		{
			get
			{
				return this._HoaDon.Entity;
			}
			set
			{
				HoaDon previousValue = this._HoaDon.Entity;
				if (((previousValue != value) 
							|| (this._HoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDon.Entity = null;
						previousValue.ChiTietHoaDons.Remove(this);
					}
					this._HoaDon.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDons.Add(this);
						this._IDHoaDon = value.IDHoaDon;
					}
					else
					{
						this._IDHoaDon = default(int);
					}
					this.SendPropertyChanged("HoaDon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDSanPham;
		
		private string _TenSanPham;
		
		private string _DonVi;
		
		private string _DonGia;
		
		private string _HinhAnh;
		
		private int _IDLoaiSanPham;
		
		private int _IDGiamGia;
		
		private EntitySet<ChiTietHoaDon> _ChiTietHoaDons;
		
		private EntityRef<GiamGia> _GiamGia;
		
		private EntityRef<LoaiSanPham> _LoaiSanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSanPhamChanging(int value);
    partial void OnIDSanPhamChanged();
    partial void OnTenSanPhamChanging(string value);
    partial void OnTenSanPhamChanged();
    partial void OnDonViChanging(string value);
    partial void OnDonViChanged();
    partial void OnDonGiaChanging(string value);
    partial void OnDonGiaChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnIDLoaiSanPhamChanging(int value);
    partial void OnIDLoaiSanPhamChanged();
    partial void OnIDGiamGiaChanging(int value);
    partial void OnIDGiamGiaChanged();
    #endregion
		
		public SanPham()
		{
			this._ChiTietHoaDons = new EntitySet<ChiTietHoaDon>(new Action<ChiTietHoaDon>(this.attach_ChiTietHoaDons), new Action<ChiTietHoaDon>(this.detach_ChiTietHoaDons));
			this._GiamGia = default(EntityRef<GiamGia>);
			this._LoaiSanPham = default(EntityRef<LoaiSanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSanPham", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDSanPham
		{
			get
			{
				return this._IDSanPham;
			}
			set
			{
				if ((this._IDSanPham != value))
				{
					this.OnIDSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IDSanPham = value;
					this.SendPropertyChanged("IDSanPham");
					this.OnIDSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSanPham", DbType="NVarChar(100)")]
		public string TenSanPham
		{
			get
			{
				return this._TenSanPham;
			}
			set
			{
				if ((this._TenSanPham != value))
				{
					this.OnTenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenSanPham = value;
					this.SendPropertyChanged("TenSanPham");
					this.OnTenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonVi", DbType="NVarChar(20)")]
		public string DonVi
		{
			get
			{
				return this._DonVi;
			}
			set
			{
				if ((this._DonVi != value))
				{
					this.OnDonViChanging(value);
					this.SendPropertyChanging();
					this._DonVi = value;
					this.SendPropertyChanged("DonVi");
					this.OnDonViChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="NVarChar(50)")]
		public string DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(200)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoaiSanPham", DbType="Int NOT NULL")]
		public int IDLoaiSanPham
		{
			get
			{
				return this._IDLoaiSanPham;
			}
			set
			{
				if ((this._IDLoaiSanPham != value))
				{
					if (this._LoaiSanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLoaiSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IDLoaiSanPham = value;
					this.SendPropertyChanged("IDLoaiSanPham");
					this.OnIDLoaiSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGiamGia", DbType="Int NOT NULL")]
		public int IDGiamGia
		{
			get
			{
				return this._IDGiamGia;
			}
			set
			{
				if ((this._IDGiamGia != value))
				{
					if (this._GiamGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGiamGiaChanging(value);
					this.SendPropertyChanging();
					this._IDGiamGia = value;
					this.SendPropertyChanged("IDGiamGia");
					this.OnIDGiamGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietHoaDon", Storage="_ChiTietHoaDons", ThisKey="IDSanPham", OtherKey="IDSanPham")]
		public EntitySet<ChiTietHoaDon> ChiTietHoaDons
		{
			get
			{
				return this._ChiTietHoaDons;
			}
			set
			{
				this._ChiTietHoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiamGia_SanPham", Storage="_GiamGia", ThisKey="IDGiamGia", OtherKey="IDGiamGia", IsForeignKey=true)]
		public GiamGia GiamGia
		{
			get
			{
				return this._GiamGia.Entity;
			}
			set
			{
				GiamGia previousValue = this._GiamGia.Entity;
				if (((previousValue != value) 
							|| (this._GiamGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiamGia.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._GiamGia.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._IDGiamGia = value.IDGiamGia;
					}
					else
					{
						this._IDGiamGia = default(int);
					}
					this.SendPropertyChanged("GiamGia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSanPham_SanPham", Storage="_LoaiSanPham", ThisKey="IDLoaiSanPham", OtherKey="IDLoaiSanPham", IsForeignKey=true)]
		public LoaiSanPham LoaiSanPham
		{
			get
			{
				return this._LoaiSanPham.Entity;
			}
			set
			{
				LoaiSanPham previousValue = this._LoaiSanPham.Entity;
				if (((previousValue != value) 
							|| (this._LoaiSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiSanPham.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._LoaiSanPham.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._IDLoaiSanPham = value.IDLoaiSanPham;
					}
					else
					{
						this._IDLoaiSanPham = default(int);
					}
					this.SendPropertyChanged("LoaiSanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiamGia")]
	public partial class GiamGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDGiamGia;
		
		private string _GiaTri;
		
		private System.Nullable<System.DateTime> _ThoiGianBatDau;
		
		private System.Nullable<System.DateTime> _ThoiGianKetThuc;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDGiamGiaChanging(int value);
    partial void OnIDGiamGiaChanged();
    partial void OnGiaTriChanging(string value);
    partial void OnGiaTriChanged();
    partial void OnThoiGianBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianBatDauChanged();
    partial void OnThoiGianKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianKetThucChanged();
    #endregion
		
		public GiamGia()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGiamGia", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDGiamGia
		{
			get
			{
				return this._IDGiamGia;
			}
			set
			{
				if ((this._IDGiamGia != value))
				{
					this.OnIDGiamGiaChanging(value);
					this.SendPropertyChanging();
					this._IDGiamGia = value;
					this.SendPropertyChanged("IDGiamGia");
					this.OnIDGiamGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTri", DbType="NVarChar(50)")]
		public string GiaTri
		{
			get
			{
				return this._GiaTri;
			}
			set
			{
				if ((this._GiaTri != value))
				{
					this.OnGiaTriChanging(value);
					this.SendPropertyChanging();
					this._GiaTri = value;
					this.SendPropertyChanged("GiaTri");
					this.OnGiaTriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBatDau", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianBatDau
		{
			get
			{
				return this._ThoiGianBatDau;
			}
			set
			{
				if ((this._ThoiGianBatDau != value))
				{
					this.OnThoiGianBatDauChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBatDau = value;
					this.SendPropertyChanged("ThoiGianBatDau");
					this.OnThoiGianBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianKetThuc", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianKetThuc
		{
			get
			{
				return this._ThoiGianKetThuc;
			}
			set
			{
				if ((this._ThoiGianKetThuc != value))
				{
					this.OnThoiGianKetThucChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianKetThuc = value;
					this.SendPropertyChanged("ThoiGianKetThuc");
					this.OnThoiGianKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiamGia_SanPham", Storage="_SanPhams", ThisKey="IDGiamGia", OtherKey="IDGiamGia")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.GiamGia = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.GiamGia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDHoaDon;
		
		private System.Nullable<System.DateTime> _NgayXuatHoaDon;
		
		private string _TongTien;
		
		private int _IDNhanVien;
		
		private int _IDKhachHang;
		
		private EntitySet<ChiTietHoaDon> _ChiTietHoaDons;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDHoaDonChanging(int value);
    partial void OnIDHoaDonChanged();
    partial void OnNgayXuatHoaDonChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayXuatHoaDonChanged();
    partial void OnTongTienChanging(string value);
    partial void OnTongTienChanged();
    partial void OnIDNhanVienChanging(int value);
    partial void OnIDNhanVienChanged();
    partial void OnIDKhachHangChanging(int value);
    partial void OnIDKhachHangChanged();
    #endregion
		
		public HoaDon()
		{
			this._ChiTietHoaDons = new EntitySet<ChiTietHoaDon>(new Action<ChiTietHoaDon>(this.attach_ChiTietHoaDons), new Action<ChiTietHoaDon>(this.detach_ChiTietHoaDons));
			this._KhachHang = default(EntityRef<KhachHang>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHoaDon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDHoaDon
		{
			get
			{
				return this._IDHoaDon;
			}
			set
			{
				if ((this._IDHoaDon != value))
				{
					this.OnIDHoaDonChanging(value);
					this.SendPropertyChanging();
					this._IDHoaDon = value;
					this.SendPropertyChanged("IDHoaDon");
					this.OnIDHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayXuatHoaDon", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayXuatHoaDon
		{
			get
			{
				return this._NgayXuatHoaDon;
			}
			set
			{
				if ((this._NgayXuatHoaDon != value))
				{
					this.OnNgayXuatHoaDonChanging(value);
					this.SendPropertyChanging();
					this._NgayXuatHoaDon = value;
					this.SendPropertyChanged("NgayXuatHoaDon");
					this.OnNgayXuatHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="NVarChar(50)")]
		public string TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNhanVien", DbType="Int NOT NULL")]
		public int IDNhanVien
		{
			get
			{
				return this._IDNhanVien;
			}
			set
			{
				if ((this._IDNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNhanVienChanging(value);
					this.SendPropertyChanging();
					this._IDNhanVien = value;
					this.SendPropertyChanged("IDNhanVien");
					this.OnIDNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKhachHang", DbType="Int NOT NULL")]
		public int IDKhachHang
		{
			get
			{
				return this._IDKhachHang;
			}
			set
			{
				if ((this._IDKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKhachHangChanging(value);
					this.SendPropertyChanging();
					this._IDKhachHang = value;
					this.SendPropertyChanged("IDKhachHang");
					this.OnIDKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChiTietHoaDon", Storage="_ChiTietHoaDons", ThisKey="IDHoaDon", OtherKey="IDHoaDon")]
		public EntitySet<ChiTietHoaDon> ChiTietHoaDons
		{
			get
			{
				return this._ChiTietHoaDons;
			}
			set
			{
				this._ChiTietHoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDon", Storage="_KhachHang", ThisKey="IDKhachHang", OtherKey="IDKhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._IDKhachHang = value.IDKhachHang;
					}
					else
					{
						this._IDKhachHang = default(int);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon", Storage="_NhanVien", ThisKey="IDNhanVien", OtherKey="IDNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._IDNhanVien = value.IDNhanVien;
					}
					else
					{
						this._IDNhanVien = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = this;
		}
		
		private void detach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDKhachHang;
		
		private string _TenKhachHang;
		
		private System.Nullable<System.DateTime> _NgaySinhKhachHang;
		
		private string _DiaChiKhachHang;
		
		private string _DienThoaiKhachHang;
		
		private string _EmailKhachHang;
		
		private EntitySet<HoaDon> _HoaDons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDKhachHangChanging(int value);
    partial void OnIDKhachHangChanged();
    partial void OnTenKhachHangChanging(string value);
    partial void OnTenKhachHangChanged();
    partial void OnNgaySinhKhachHangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhKhachHangChanged();
    partial void OnDiaChiKhachHangChanging(string value);
    partial void OnDiaChiKhachHangChanged();
    partial void OnDienThoaiKhachHangChanging(string value);
    partial void OnDienThoaiKhachHangChanged();
    partial void OnEmailKhachHangChanging(string value);
    partial void OnEmailKhachHangChanged();
    #endregion
		
		public KhachHang()
		{
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKhachHang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDKhachHang
		{
			get
			{
				return this._IDKhachHang;
			}
			set
			{
				if ((this._IDKhachHang != value))
				{
					this.OnIDKhachHangChanging(value);
					this.SendPropertyChanging();
					this._IDKhachHang = value;
					this.SendPropertyChanged("IDKhachHang");
					this.OnIDKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhachHang", DbType="NVarChar(50)")]
		public string TenKhachHang
		{
			get
			{
				return this._TenKhachHang;
			}
			set
			{
				if ((this._TenKhachHang != value))
				{
					this.OnTenKhachHangChanging(value);
					this.SendPropertyChanging();
					this._TenKhachHang = value;
					this.SendPropertyChanged("TenKhachHang");
					this.OnTenKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinhKhachHang", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinhKhachHang
		{
			get
			{
				return this._NgaySinhKhachHang;
			}
			set
			{
				if ((this._NgaySinhKhachHang != value))
				{
					this.OnNgaySinhKhachHangChanging(value);
					this.SendPropertyChanging();
					this._NgaySinhKhachHang = value;
					this.SendPropertyChanged("NgaySinhKhachHang");
					this.OnNgaySinhKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiKhachHang", DbType="NVarChar(100)")]
		public string DiaChiKhachHang
		{
			get
			{
				return this._DiaChiKhachHang;
			}
			set
			{
				if ((this._DiaChiKhachHang != value))
				{
					this.OnDiaChiKhachHangChanging(value);
					this.SendPropertyChanging();
					this._DiaChiKhachHang = value;
					this.SendPropertyChanged("DiaChiKhachHang");
					this.OnDiaChiKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoaiKhachHang", DbType="NVarChar(20)")]
		public string DienThoaiKhachHang
		{
			get
			{
				return this._DienThoaiKhachHang;
			}
			set
			{
				if ((this._DienThoaiKhachHang != value))
				{
					this.OnDienThoaiKhachHangChanging(value);
					this.SendPropertyChanging();
					this._DienThoaiKhachHang = value;
					this.SendPropertyChanged("DienThoaiKhachHang");
					this.OnDienThoaiKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailKhachHang", DbType="NVarChar(100)")]
		public string EmailKhachHang
		{
			get
			{
				return this._EmailKhachHang;
			}
			set
			{
				if ((this._EmailKhachHang != value))
				{
					this.OnEmailKhachHangChanging(value);
					this.SendPropertyChanging();
					this._EmailKhachHang = value;
					this.SendPropertyChanged("EmailKhachHang");
					this.OnEmailKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDon", Storage="_HoaDons", ThisKey="IDKhachHang", OtherKey="IDKhachHang")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiSanPham")]
	public partial class LoaiSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDLoaiSanPham;
		
		private string _TenLoaiSanPham;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLoaiSanPhamChanging(int value);
    partial void OnIDLoaiSanPhamChanged();
    partial void OnTenLoaiSanPhamChanging(string value);
    partial void OnTenLoaiSanPhamChanged();
    #endregion
		
		public LoaiSanPham()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoaiSanPham", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDLoaiSanPham
		{
			get
			{
				return this._IDLoaiSanPham;
			}
			set
			{
				if ((this._IDLoaiSanPham != value))
				{
					this.OnIDLoaiSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IDLoaiSanPham = value;
					this.SendPropertyChanged("IDLoaiSanPham");
					this.OnIDLoaiSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiSanPham", DbType="NVarChar(50)")]
		public string TenLoaiSanPham
		{
			get
			{
				return this._TenLoaiSanPham;
			}
			set
			{
				if ((this._TenLoaiSanPham != value))
				{
					this.OnTenLoaiSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiSanPham = value;
					this.SendPropertyChanged("TenLoaiSanPham");
					this.OnTenLoaiSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSanPham_SanPham", Storage="_SanPhams", ThisKey="IDLoaiSanPham", OtherKey="IDLoaiSanPham")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDNhanVien;
		
		private string _HoNhanVien;
		
		private string _TenNhanVien;
		
		private System.Nullable<System.DateTime> _NgaySinhNhanVien;
		
		private string _DiaChiNhanVien;
		
		private string _DienThoaiNhanVien;
		
		private string _TaiKhoanNhanVien;
		
		private string _MatKhauNhanVien;
		
		private System.Nullable<bool> _LoaiNhanVien;
		
		private EntitySet<HoaDon> _HoaDons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNhanVienChanging(int value);
    partial void OnIDNhanVienChanged();
    partial void OnHoNhanVienChanging(string value);
    partial void OnHoNhanVienChanged();
    partial void OnTenNhanVienChanging(string value);
    partial void OnTenNhanVienChanged();
    partial void OnNgaySinhNhanVienChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhNhanVienChanged();
    partial void OnDiaChiNhanVienChanging(string value);
    partial void OnDiaChiNhanVienChanged();
    partial void OnDienThoaiNhanVienChanging(string value);
    partial void OnDienThoaiNhanVienChanged();
    partial void OnTaiKhoanNhanVienChanging(string value);
    partial void OnTaiKhoanNhanVienChanged();
    partial void OnMatKhauNhanVienChanging(string value);
    partial void OnMatKhauNhanVienChanged();
    partial void OnLoaiNhanVienChanging(System.Nullable<bool> value);
    partial void OnLoaiNhanVienChanged();
    #endregion
		
		public NhanVien()
		{
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNhanVien", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDNhanVien
		{
			get
			{
				return this._IDNhanVien;
			}
			set
			{
				if ((this._IDNhanVien != value))
				{
					this.OnIDNhanVienChanging(value);
					this.SendPropertyChanging();
					this._IDNhanVien = value;
					this.SendPropertyChanged("IDNhanVien");
					this.OnIDNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoNhanVien", DbType="NVarChar(50)")]
		public string HoNhanVien
		{
			get
			{
				return this._HoNhanVien;
			}
			set
			{
				if ((this._HoNhanVien != value))
				{
					this.OnHoNhanVienChanging(value);
					this.SendPropertyChanging();
					this._HoNhanVien = value;
					this.SendPropertyChanged("HoNhanVien");
					this.OnHoNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhanVien", DbType="NVarChar(50)")]
		public string TenNhanVien
		{
			get
			{
				return this._TenNhanVien;
			}
			set
			{
				if ((this._TenNhanVien != value))
				{
					this.OnTenNhanVienChanging(value);
					this.SendPropertyChanging();
					this._TenNhanVien = value;
					this.SendPropertyChanged("TenNhanVien");
					this.OnTenNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinhNhanVien", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinhNhanVien
		{
			get
			{
				return this._NgaySinhNhanVien;
			}
			set
			{
				if ((this._NgaySinhNhanVien != value))
				{
					this.OnNgaySinhNhanVienChanging(value);
					this.SendPropertyChanging();
					this._NgaySinhNhanVien = value;
					this.SendPropertyChanged("NgaySinhNhanVien");
					this.OnNgaySinhNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiNhanVien", DbType="NVarChar(100)")]
		public string DiaChiNhanVien
		{
			get
			{
				return this._DiaChiNhanVien;
			}
			set
			{
				if ((this._DiaChiNhanVien != value))
				{
					this.OnDiaChiNhanVienChanging(value);
					this.SendPropertyChanging();
					this._DiaChiNhanVien = value;
					this.SendPropertyChanged("DiaChiNhanVien");
					this.OnDiaChiNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoaiNhanVien", DbType="NVarChar(20)")]
		public string DienThoaiNhanVien
		{
			get
			{
				return this._DienThoaiNhanVien;
			}
			set
			{
				if ((this._DienThoaiNhanVien != value))
				{
					this.OnDienThoaiNhanVienChanging(value);
					this.SendPropertyChanging();
					this._DienThoaiNhanVien = value;
					this.SendPropertyChanged("DienThoaiNhanVien");
					this.OnDienThoaiNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoanNhanVien", DbType="NVarChar(50)")]
		public string TaiKhoanNhanVien
		{
			get
			{
				return this._TaiKhoanNhanVien;
			}
			set
			{
				if ((this._TaiKhoanNhanVien != value))
				{
					this.OnTaiKhoanNhanVienChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoanNhanVien = value;
					this.SendPropertyChanged("TaiKhoanNhanVien");
					this.OnTaiKhoanNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhauNhanVien", DbType="NVarChar(50)")]
		public string MatKhauNhanVien
		{
			get
			{
				return this._MatKhauNhanVien;
			}
			set
			{
				if ((this._MatKhauNhanVien != value))
				{
					this.OnMatKhauNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MatKhauNhanVien = value;
					this.SendPropertyChanged("MatKhauNhanVien");
					this.OnMatKhauNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiNhanVien", DbType="Bit")]
		public System.Nullable<bool> LoaiNhanVien
		{
			get
			{
				return this._LoaiNhanVien;
			}
			set
			{
				if ((this._LoaiNhanVien != value))
				{
					this.OnLoaiNhanVienChanging(value);
					this.SendPropertyChanging();
					this._LoaiNhanVien = value;
					this.SendPropertyChanged("LoaiNhanVien");
					this.OnLoaiNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon", Storage="_HoaDons", ThisKey="IDNhanVien", OtherKey="IDNhanVien")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
}
#pragma warning restore 1591
